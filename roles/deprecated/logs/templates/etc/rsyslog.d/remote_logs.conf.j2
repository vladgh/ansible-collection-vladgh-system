{{ ansible_managed | comment }}

# An "In-Memory Queue" is created for remote logging.
$WorkDirectory /var/spool/rsyslog  # where to place spool files
$ActionQueueFileName queue         # unique name prefix for spool files
$ActionQueueMaxDiskSpace 1g        # spool space limit (use as much as possible)
$ActionQueueSaveOnShutdown on      # save messages to disk on shutdown
$ActionQueueType LinkedList        # run asynchronously
$ActionResumeRetryCount -1         # infinety retries if host is down

# Use default format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Setup SSL connection
$DefaultNetstreamDriver gtls
$ActionSendStreamDriverMode 1
$ActionSendStreamDriverAuthMode x509/name
{% if remote_logs_permitted_peer is defined and remote_logs_permitted_peer | length > 0 %}
$ActionSendStreamDriverPermittedPeer {{ remote_logs_permitted_peer }}
{% endif %}
{% if remote_logs_ca_file is defined and remote_logs_ca_file | length > 0 %}
$DefaultNetStreamDriverCAFile {{ remote_logs_ca_file }}
{% endif %}

{% if remote_logs_template is defined and remote_logs_template['name'] != '' and remote_logs_template['string'] != '' %}
# Use a template
$template {{ remote_logs_template['name'] }},"{{ remote_logs_template['string'] }}"
{% endif %}

# Sending all logs to remote
*.* {% if remote_logs_protocol == 'tcp' %}@@{% elif remote_logs_protocol == 'udp' %}@{% else %}@@{% endif %}{{ remote_logs_server }}:{{ remote_logs_port }}{% if remote_logs_template is defined and remote_logs_template['name'] != '' %};{{ remote_logs_template['name'] }}{% endif %}

---
- name: Ensure NFS package is installed
  ansible.builtin.package:
    name: "{{ nfs_client_package_name }}"
  loop: "{{ [mounts, systemd_mounts] | flatten | unique }}"
  when: >
    ( item.fstype is defined and item.fstype is match('nfs') ) or
    ( item.type is defined and item.type is match('nfs') )

- name: Ensure RPCBind service is enabled and running
  ansible.builtin.service:
    name: rpcbind
    state: started
    enabled: true
  loop: "{{ [mounts, systemd_mounts] | flatten | unique }}"
  when: >
    ( item.fstype is defined and item.fstype is match('nfs') ) or
    ( item.type is defined and item.type is match('nfs') )

- name: Create the local directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.group | default(omit) }}"
  loop: "{{ mounts }}"
  when: item is defined and item | length > 0

- name: Create mount points
  ansible.posix.mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    opts: "{{ item.opts | default(omit) }}"
    fstype: "{{ item.fstype | default(omit) }}"
    dump: "{{ item.dump | default(omit) }}"
    passno: "{{ item.passno | default(omit) }}"
    state: "{{ item.state | default('mounted') }}"
  loop: "{{ mounts }}"
  when: item is defined and item | length > 0

# SystemD Mounts
- name: Setup SystemD service for mount points
  ansible.builtin.template:
    src: etc/systemd/system/systemd_mount.j2
    dest: /etc/systemd/system/{{ item.where[1:] | replace('/', "-") }}.mount
    owner: root
    group: root
    mode: '0644'
  notify: Restart SystemD mount
  loop: "{{ systemd_mounts }}"

- name: Enable and start SystemD mount
  ansible.builtin.systemd:
    name: "{{ item.where[1:] | replace('/', '-') }}.mount"
    state: "{{ item.service_state | default('started') }}"
    enabled: "{{ item.service_enabled | default(true) }}"
    daemon_reload: true
  loop: "{{ systemd_mounts }}"
  when: (item.automount is not defined) or (not item.automount)

- name: Setup SystemD service for auto mount
  ansible.builtin.template:
    src: etc/systemd/system/systemd_automount.j2
    dest: /etc/systemd/system/{{ item.where[1:] | replace('/', "-") }}.automount
    owner: root
    group: root
    mode: '0644'
  notify: Restart SystemD auto mount
  loop: "{{ systemd_mounts }}"
  when: item.automount is defined and item.automount | bool

- name: Enable and start SystemD auto mount
  ansible.builtin.systemd:
    name: "{{ item.where[1:] | replace('/', '-') }}.automount"
    state: "{{ item.service_state | default('started') }}"
    enabled: "{{ item.service_enabled | default(true) }}"
    daemon_reload: true
  loop: "{{ systemd_mounts }}"
  when: item.automount is defined and item.automount | bool
